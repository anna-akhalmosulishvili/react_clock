{"version":3,"sources":["Clock.tsx","App.tsx","index.tsx"],"names":["Clock","prevState","this","props","today","toUTCString","slice","console","info","name","localeCompare","debug","className","React","Component","getRandomName","value","Date","now","toString","App","state","clockName","hasClock","timeInterval","nameInterval","addClock","setState","window","setInterval","dateHandler","removeClock","nameHandler","document","addEventListener","removeEventListener","ReactDOM","render","getElementById"],"mappings":"sNAQaA,EAAb,wKACE,SAAmBC,GACbC,KAAKC,MAAMC,MAAMC,cAAcC,OAAO,IAAK,KAC3CL,EAAUG,MAAMC,cAAcC,OAAO,IAAK,IAC5CC,QAAQC,KAAKN,KAAKC,MAAMC,MAAMC,cAAcC,OAAO,IAAK,IAGJ,IAAlDL,EAAUQ,KAAKC,cAAcR,KAAKC,MAAMM,OAC1CF,QAAQI,MAAR,uBAA8BV,EAAUQ,KAAxC,eAAmDP,KAAKC,MAAMM,SARpE,oBAYE,WACE,MAAwBP,KAAKC,MAArBC,EAAR,EAAQA,MAAOK,EAAf,EAAeA,KAEf,OACE,sBAAKG,UAAU,QAAf,UACE,wBAAQA,UAAU,cAAlB,SACGH,IAEF,YACD,sBAAMG,UAAU,cAAhB,SACGR,EAAMC,cAAcC,OAAO,IAAK,YAtB3C,GAA2BO,IAAMC,WCJjC,SAASC,IACP,IAAMC,EAAQC,KAAKC,MAAMC,WAAWb,OAAO,GAE3C,MAAM,SAAN,OAAgBU,GAGX,IAAMI,EAAb,4MACEC,MAAQ,CACNjB,MAAO,IAAIa,KACXK,UAAW,UACXC,UAAU,EACVC,aAAc,EACdC,aAAc,GANlB,EAqBEC,SAAW,WACT,EAAKC,SAAS,CAAEvB,MAAO,IAAIa,OAC3B,EAAKI,MAAMG,aAAeI,OAAOC,YAAY,EAAKC,YAAa,KAC/D,EAAKH,SAAS,CAAEJ,UAAU,KAxB9B,EA2BEQ,YAAc,WACZ,EAAKJ,SAAS,CAAEJ,UAAU,KA5B9B,EA+BEO,YAAc,WACZ,EAAKH,SAAS,CAAEvB,MAAO,IAAIa,QAhC/B,EAmCEe,YAAc,WACZ,EAAKL,SAAS,CAAEL,UAAWP,OApC/B,uDASE,WACEkB,SAASC,iBAAiB,QAAShC,KAAKwB,UACxCO,SAASC,iBAAiB,cAAehC,KAAK6B,aAC9C7B,KAAKmB,MAAMG,aAAeI,OAAOC,YAAY3B,KAAK4B,YAAa,KAC/D5B,KAAKmB,MAAMI,aAAeG,OAAOC,YAAY3B,KAAK8B,YAAa,QAbnE,kCAgBE,WACEC,SAASE,oBAAoB,QAASjC,KAAKwB,UAC3CO,SAASE,oBAAoB,cAAejC,KAAK6B,eAlBrD,oBAuCE,WACE,MAAuC7B,KAAKmB,MAApCjB,EAAR,EAAQA,MAAOkB,EAAf,EAAeA,UAAWC,EAA1B,EAA0BA,SAE1B,OACE,sBAAKX,UAAU,MAAf,UACE,6CACCW,GAAY,cAAC,EAAD,CAAOnB,MAAOA,EAAOK,KAAMa,WA7ChD,GAAyBT,IAAMC,WCP/BsB,IAASC,OACP,cAAC,EAAD,IACAJ,SAASK,eAAe,W","file":"static/js/main.e82c4c7e.chunk.js","sourcesContent":["/* eslint-disable no-console */\nimport React from 'react';\n\ntype Props = {\n  today: Date;\n  name: string;\n};\n\nexport class Clock extends React.Component<Props> {\n  componentDidUpdate(prevState: Readonly<Props>) {\n    if (this.props.today.toUTCString().slice(-12, -4)\n    !== prevState.today.toUTCString().slice(-12, -4)) {\n      console.info(this.props.today.toUTCString().slice(-12, -4));\n    }\n\n    if (prevState.name.localeCompare(this.props.name) !== 0) {\n      console.debug(`Renamed from ${prevState.name} to ${this.props.name}`);\n    }\n  }\n\n  render() {\n    const { today, name } = this.props;\n\n    return (\n      <div className=\"Clock\">\n        <strong className=\"Clock__name\">\n          {name}\n        </strong>\n        {' time is '}\n        <span className=\"Clock__time\">\n          {today.toUTCString().slice(-12, -4)}\n        </span>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './Clock';\n\nfunction getRandomName(): string {\n  const value = Date.now().toString().slice(-4);\n\n  return `Clock-${value}`;\n}\n\nexport class App extends React.Component {\n  state = {\n    today: new Date(),\n    clockName: 'Clock-0',\n    hasClock: true,\n    timeInterval: 0,\n    nameInterval: 0,\n  };\n\n  componentDidMount() {\n    document.addEventListener('click', this.addClock);\n    document.addEventListener('contextmenu', this.removeClock);\n    this.state.timeInterval = window.setInterval(this.dateHandler, 1000);\n    this.state.nameInterval = window.setInterval(this.nameHandler, 3300);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('click', this.addClock);\n    document.removeEventListener('contextmenu', this.removeClock);\n  }\n\n  addClock = () => {\n    this.setState({ today: new Date() });\n    this.state.timeInterval = window.setInterval(this.dateHandler, 1000);\n    this.setState({ hasClock: true });\n  };\n\n  removeClock = () => {\n    this.setState({ hasClock: false });\n  };\n\n  dateHandler = () => {\n    this.setState({ today: new Date() });\n  };\n\n  nameHandler = () => {\n    this.setState({ clockName: getRandomName() });\n  };\n\n  render() {\n    const { today, clockName, hasClock } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        {hasClock && <Clock today={today} name={clockName} />}\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}